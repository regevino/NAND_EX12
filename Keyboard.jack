// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int address;

    /** Initializes the keyboard. */
    function void init()
    {
        let address = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed()
    {
        var char pressedKey;
        let pressedKey = Memory.peek(address);
        return pressedKey;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar()
    {
        var char key, c;
        while(key = 0)
        {
            let key = Keyboard.keyPressed();
        }
        
        let c = key;
        while (~(key = 0))
        {
            let key = Keyboard.keyPressed();
        }

        do Output.printChar(c);
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message)
    {
        var String s;
        var char c;

        do Output.printString(message);
        let s = String.new(1472);
        while(true)
        {
            let c = Keyboard.readChar();
            if(c = String.newLine())
            {
                do Output.println();
                return s;
            }
            else
            {
                if (c = String.backSpace())
                {
                    do s.eraseLastChar();
                }
                else
                {
                    do s.appendChar(c);
                }
            }
        }
        return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message)
    {
        var int i, sum;
        var String s;
        var int c;
        var int is_negative;
        let s = Keyboard.readLine(message);
        let i = 0;
        let sum = 0;
        let is_negative = 0;
        if (s.charAt(0) = 45)
        {
            let is_negative = 1;
            let i = 1;
        }
        while(i < s.length())
        {
            let c = s.charAt(i);
            if (c > 47 | c < 58)
            {
                let sum = sum + c - 48;
                let sum = sum*10;
            }
            else
            {
                if (is_negative = 1)
                {
                    return -sum;
                }
                return sum;
            }
            let i = i + 1;
        }
        if (is_negative = 1)
        {
            return -sum;
        }
        return sum;
    }
}
